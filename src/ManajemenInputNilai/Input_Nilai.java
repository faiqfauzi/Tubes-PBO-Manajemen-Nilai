/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ManajemenInputNilai;

import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class Input_Nilai extends javax.swing.JFrame {

    /**
     * Creates new form Input_Nilai
     */
    public Input_Nilai() {
        initComponents();
        tampilkanData();
        
    tblNilai.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = tblNilai.getSelectedRow(); // Ambil baris yang dipilih

        // Ambil data dari setiap kolom di baris yang dipilih
        String kodeMatkul = tblNilai.getValueAt(row, 0).toString(); // Kolom pertama (kode_matkul)
        String namaMatkul = tblNilai.getValueAt(row, 1).toString(); // Kolom kedua (nama_matkul)
        String nim = tblNilai.getValueAt(row, 2).toString(); // Kolom ketiga (nim)
        String namaMahasiswa = tblNilai.getValueAt(row, 3).toString(); // Kolom keempat (nama_mahasiswa)
        String nilai = tblNilai.getValueAt(row, 4).toString(); // Kolom kelima (nilai)

        // Set data yang diambil ke textfield
        lblKode.setText(kodeMatkul);
        txtMatkul.setText(namaMatkul);
        txtNIM.setText(nim);
        lblNama.setText(namaMahasiswa);
        txtNilai.setText(nilai);
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNIM = new javax.swing.JTextField();
        txtMatkul = new javax.swing.JTextField();
        txtNilai = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnTambahMatkul = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNilai = new javax.swing.JTable();
        lblKode = new javax.swing.JLabel();
        lblNama = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("nim");

        jLabel3.setText("matkul");

        jLabel4.setText("nilai");

        txtNIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNIMActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnTambahMatkul.setText("Tambah Kode Matkul");
        btnTambahMatkul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahMatkulActionPerformed(evt);
            }
        });

        tblNilai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Matkul", "Nama Matkul", "NIM", "Nama Mahasiswa", "Nilai"
            }
        ));
        jScrollPane1.setViewportView(tblNilai);

        lblKode.setText("Kode");

        lblNama.setText("Nama");

        jLabel1.setText("Nama Mahasiswa");

        jLabel5.setText("Kode Mata Kuliah");

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnTambahMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(12, 12, 12)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblKode, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblNama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(72, 72, 72)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtMatkul, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                                .addComponent(txtNIM)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(72, 72, 72)
                                            .addComponent(txtNilai, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(29, 29, 29)
                                .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 39, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnTambahMatkul))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNama)
                            .addComponent(jLabel1))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKode)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String nimMahasiswa = txtNIM.getText();  // NIM mahasiswa
        String kodeMatkul = txtMatkul.getText();  // Kode mata kuliah
        int nilai = Integer.parseInt(txtNilai.getText());  // Nilai

    // Query untuk memasukkan nilai ke dalam tabel nilai
    String query = "INSERT INTO nilai (nim, kode_matkul, nilai) VALUES (?, ?, ?)";

    try (Connection con = DatabaseConnection.getConnection();
     PreparedStatement stmt = con.prepareStatement(query)) {
    stmt.setString(1, nimMahasiswa);
    stmt.setString(2, kodeMatkul);
    stmt.setInt(3, nilai);

    int rowsAffected = stmt.executeUpdate();
    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Nilai berhasil disimpan.");
        tampilkanData();
    } else {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menyimpan nilai.");
    }
} catch (SQLException ex) {
    ex.printStackTrace(); // Ini akan memberi tahu lebih banyak tentang kesalahan yang terjadi
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan dalam koneksi ke database: " + ex.getMessage());
}
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnTambahMatkulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahMatkulActionPerformed
        new InputKodeMatkul().setVisible(true);  // Menampilkan halaman InputKodeMatkul
        this.dispose();
    }//GEN-LAST:event_btnTambahMatkulActionPerformed

    private void txtNIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNIMActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        String kodeMatkul = lblKode.getText();
        String namaMatkul = txtMatkul.getText();
        String nim = txtNIM.getText();
        String namaMahasiswa = lblNama.getText();
        String nilai = txtNilai.getText();

        // Validasi jika data ada yang kosong
        if (kodeMatkul.isEmpty() || namaMatkul.isEmpty() || nim.isEmpty() || namaMahasiswa.isEmpty() || nilai.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua field harus diisi!");
            return;
        }

        // Koneksi ke database dan eksekusi query update
        try {
            Connection conn = DatabaseConnection.getConnection();
            String query = "UPDATE nilai SET kode_matkul = ?, nim = ?, nilai = ? " +
                           "WHERE kode_matkul = ? AND nim = ?";  // Update query
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, kodeMatkul); // Set kode_matkul yang baru
            pst.setString(2, nim);        // Set nim yang baru
            pst.setString(3, nilai);      // Set nilai yang baru
            pst.setString(4, kodeMatkul); // Kondisi untuk mencari data yang ingin diupdate
            pst.setString(5, nim);        // Kondisi untuk mencari data yang ingin diupdate

            int updatedRows = pst.executeUpdate();  // Eksekusi query update

            if (updatedRows > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil diupdate!");
                tampilkanData();  // Tampilkan data yang baru
            } else {
                JOptionPane.showMessageDialog(null, "Data gagal diupdate!");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int row = tblNilai.getSelectedRow();
        if (row != -1) {
            // Ambil kode_matkul dan nim dari data yang dipilih
            String kodeMatkul = tblNilai.getValueAt(row, 0).toString();
            String nim = tblNilai.getValueAt(row, 2).toString();

            // Konfirmasi penghapusan
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    // Koneksi ke database dan eksekusi query hapus
                    Connection conn = DatabaseConnection.getConnection();
                    String query = "DELETE FROM nilai WHERE kode_matkul = ? AND nim = ?";
                    PreparedStatement pst = conn.prepareStatement(query);
                    pst.setString(1, kodeMatkul);
                    pst.setString(2, nim);

                    int deletedRows = pst.executeUpdate();  // Eksekusi query delete
                    if (deletedRows > 0) {
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                        tampilkanData();  // Tampilkan data setelah penghapusan
                    } else {
                        JOptionPane.showMessageDialog(null, "Data gagal dihapus!");
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus!");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tampilkanData() {
    // Menyiapkan model tabel
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Kode Matkul");
    model.addColumn("Nama Matkul");
    model.addColumn("NIM");
    model.addColumn("Nama Mahasiswa");  // Kolom untuk Nama Mahasiswa
    model.addColumn("Nilai");

    // Koneksi ke database dan eksekusi query
    try {
        Connection conn = DatabaseConnection.getConnection();
        String query = "SELECT n.kode_matkul, m.nama_matkul, n.nim, p.username, n.nilai " +
                       "FROM nilai n " +
                       "JOIN mata_kuliah m ON n.kode_matkul = m.kode_matkul " +
                       "JOIN pengguna p ON n.nim = p.nim";  // Query yang telah dimodifikasi
        PreparedStatement pst = conn.prepareStatement(query);
        ResultSet rs = pst.executeQuery();  // Eksekusi query dan ambil hasilnya

        // Mengambil data dari ResultSet dan menambahkannya ke model tabel
        while (rs.next()) {
            String kodeMatkul = rs.getString("kode_matkul");
            String namaMatkul = rs.getString("nama_matkul");
            String nim = rs.getString("nim");
            String namaMahasiswa = rs.getString("username");  // Ambil nama dari tabel pengguna
            String nilai = rs.getString("nilai");
            model.addRow(new Object[]{kodeMatkul, namaMatkul, nim, namaMahasiswa, nilai});
        }

        // Set model pada JTable
        tblNilai.setModel(model);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Input_Nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Input_Nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Input_Nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Input_Nilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Input_Nilai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTambahMatkul;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKode;
    private javax.swing.JLabel lblNama;
    private javax.swing.JTable tblNilai;
    private javax.swing.JTextField txtMatkul;
    private javax.swing.JTextField txtNIM;
    private javax.swing.JTextField txtNilai;
    // End of variables declaration//GEN-END:variables
}
